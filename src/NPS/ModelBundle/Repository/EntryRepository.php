<?php

namespace NPS\ModelBundle\Repository;

use NPS\ModelBundle\Entity\Entry;
use NPS\ModelBundle\Repository\BaseRepository;
use NPS\CoreBundle\Helper\TextHelper;

/**
 * EntryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EntryRepository extends BaseRepository
{
    /**
     * Add entry
     * @param object $entryData
     * @param Feed   $feed
     */
    public function addEntry($entryData, $feed)
    {
        $author = $this->getOneMany($entryData->get_author(), $entryData->get_authors());
        $category = $this->getOneMany($entryData->get_category(), $entryData->get_categories());



        //TODO: add author, category
        $em = $this->getEntityManager();
        $entry = new Entry();
        $entry->setFeed($feed);
        $entry->setTitle($entryData->get_title());
        $entry->setLink($entryData->get_link());
        $entry->setContent($entryData->get_description());
        $entry->setContentHash(sha1($entryData->get_description()));
        $entry->setDateAdd($entryData->get_date('U'));
        $em->persist($entry);
        $em->flush();
    }

    /**
     * Get author
     * @param string $one
     * @param array $many
     *
     * @return string
     */
    private function getOneMany($one, $many)
    {
        if ($one && !is_numeric($one)) {
            return $one;
        } elseif (count($many)) {
            $c = 0;
            foreach ($many as $value) {
                if (!$c) {
                    $resultValues = $value;
                }
                $resultValues .= '; '.$value;
                $c++;
            }

            return $resultValues;
        } else {
            return '';
        }
    }

}
