<?php

namespace NPS\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UserItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserItemRepository extends EntityRepository
{
    /**
     * Check if are relation between user and item.
     *
     * @param $userId
     * @param $itemId
     *
     * @return null|Item
     */
    public function hasItem($userId, $itemId)
    {
        $query = $this->createQueryBuilder('o')
            ->where('o.user = :userId')
            ->andWhere('o.item = :itemId')
            ->setParameter('userId', $userId)
            ->setParameter('itemId', $itemId)
            ->getQuery();
        $itemCollection = $query->getResult();
        $item = null;

        if (count($itemCollection) > 0) {
            foreach ($itemCollection as $value) {
                $item = $value;
            }
        }

        return $item;
    }

    /**
     * Get count of unread items by user and feed
     * @param $userId
     * @param $feedId
     *
     * @return int
     */
    public function countUnreadByFeedUser($userId, $feedId)
    {
        $feedCollection = $this->getUnreadByFeedUser($userId, $feedId);

        return count($feedCollection);
    }

    /**
     * Get unread items by user and feed
     *
     * @param $userId
     * @param $feedId
     *
     * @return array
     */
    public function getUnreadByFeedUser($userId, $feedId)
    {
        $query = $this->createQueryBuilder('ui')
            ->join('ui.item', 'i')
            ->join('ui.user', 'u')
            ->where('u.id = :userId')
            ->andWhere('i.feed = :feedId')
            ->andWhere('ui.unread = :unread')
            ->orderBy('i.dateAdd', 'DESC')
            ->setParameter('userId', $userId)
            ->setParameter('feedId', $feedId)
            ->setParameter('unread', true)
            ->getQuery();
        $itemCollection = $query->getResult();

        return $itemCollection;
    }
}
