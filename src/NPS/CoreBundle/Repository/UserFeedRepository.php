<?php

namespace NPS\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UserFeedRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserFeedRepository extends EntityRepository
{
    /**
     * Count active subscribers
     *
     * @param $feedId
     *
     * @return int
     */
    public function countActiveSubscribers($feedId)
    {
        $query = $this->createQueryBuilder('uf')
            ->select('count(uf.id)')
            ->where('uf.feed = :feedId')
            ->andWhere('uf.deleted = :deleted')
            ->setParameter('feedId', $feedId)
            ->setParameter('deleted', false)
            ->getQuery();

        return $query->getSingleScalarResult();
    }

    /**
     * Check if user is subscribed
     * @param int $userId user id
     * @param int $feedId feed id
     *
     * @return bool
     */
    public function checkUserSubscribed($userId, $feedId)
    {
        $query = $this->createQueryBuilder('o')
            ->where('o.user = :userId')
            ->andWhere('o.feed = :feedId')
            ->setParameter('userId', $userId)
            ->setParameter('feedId', $feedId)
            ->getQuery();
        $feedCollection = $query->getResult();

        if (count($feedCollection)) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * Get user's feeds list for menu
     * @param $userId
     *
     * @return mixed
     */
    public function getUserFeeds($userId)
    {
        $query = $this->createQueryBuilder('uf')
            ->where('uf.user = :userId')
            ->andWhere('uf.deleted = :deleted')
            ->orderBy('uf.title', 'ASC')
            ->setParameter('userId', $userId)
            ->setParameter('deleted', false)
            ->getQuery();
        $feedCollection = $query->getResult();

        return $feedCollection;
    }

    /**
     * Get user's feeds with count of user's items
     *
     * @param integer $userId
     *
     * @return array
     */
    public function getUserFeedsForMenu($userId)
    {
        $itemTable = $this->getEntityManager()->getClassMetadata('NPSCoreBundle:Item')->getTableName();
        $userFeedTable = $this->getEntityManager()->getClassMetadata('NPSCoreBundle:UserFeed')->getTableName();
        $userItemTable = $this->getEntityManager()->getClassMetadata('NPSCoreBundle:UserItem')->getTableName();
        $query = "SELECT uf.feed_id AS id, uf.title, (
            SELECT COUNT(ui.id) count
            FROM ".$userItemTable." ui
            INNER JOIN ".$itemTable." i ON i.id=ui.item_id
            WHERE ui.user_id=uf.user_id AND ui.unread=1 AND i.feed_id=uf.feed_id) AS count
            FROM ".$userFeedTable." uf
            WHERE uf.user_id=".$userId." AND uf.deleted=0
            GROUP BY uf.feed_id
            ORDER BY uf.title ASC;";
        $result = $this->getEntityManager()->getConnection()->executeQuery($query)->fetchAll();

        return $result;
    }
}
